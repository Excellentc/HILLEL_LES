"""
    Вам на вход приходит последовательность целых чисел. Вам надо обрабатывать ее следующим образом: выводить на экран
сумму первых пяти чисел этой последовательности, затем следующих 5 итд.
    Но последовательность не дается вам сразу целиком. С течением времени к вам поступают её последовательные части.
Например, сначала первые три элемента, потом следующие шесть, потом следующие два и т. д.
    Реализуйте класс Buffer, который будет накапливать в себе элементы последовательности и выводить сумму пятерок
последовательных элементов по мере их накопления.
    Одним из требований к классу является то, что он не должен хранить в себе больше элементов, чем ему действительно
 необходимо, т. е. он не должен хранить элементы, которые уже вошли в пятерку, для которой была выведена сумма.
"""


class Buffer:
    def __init__(self, *number):
        self.number = number

    def add(self, number):
        sum_ = 0
        for i in range(len(number)):
            sum_ += number[i]
        print("Amount of number (", *number, ") its", sum_, sep=' ', end='\n', flush=False)


print(" Enter a sequence of natural numbers. ", "\n",
      "For end - input enter empty line : ")
l1 = []
amp = Buffer()
count = 0
while 1 == 1:
    x = input()
    count += 1
    if x == "":
        print("You are quit")
        break
    l1.append(int(x))
    if count % 5 == 0:
        amp.add(l1[count-5:count:1])
        print("Enter next numbers or quit( empty line )")
